com.ibm.datatools.routine.templates=<?xml version\="1.0" encoding\="UTF-8"?><templates><template autoinsert\="false" context\="db2luw_sp_java" deleted\="false" description\="Open a cursor and retrieve values from SYSIBM.SYSTABLES." enabled\="true" name\="Deploy &amp; Run\: (Dynamic JDBC) Return a result set">\# DDL Template\r\nCREATE PROCEDURE ${name} ()\r\n    DYNAMIC RESULT SETS 1\r\n    NOT DETERMINISTIC\r\n    LANGUAGE Java\r\n    EXTERNAL NAME '${jarName}\:${javaPackage}.${className}.x_${routineName}'\r\n    FENCED\r\n    THREADSAFE\r\n    PARAMETER STYLE JAVA\r\n\# Java Template\r\npackage ${javaPackage};\r\n\r\nimport java.sql.Connection;\r\nimport java.sql.DriverManager;\r\nimport java.sql.PreparedStatement;\r\nimport java.sql.ResultSet;\r\nimport java.sql.SQLException;\r\n\r\npublic class ${className} {\r\n    public static void x_${routineName} (ResultSet[] rs) throws SQLException, Exception {\r\n        // \#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\r\n\t    // \# The example SQL statement\r\n        // \# returns all tables created by ${schemaName}\r\n        // \#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\r\n        // Get connection to the database\r\n        Connection con \= DriverManager.getConnection("jdbc\:default\:connection");\r\n        \r\n        // SQL to execute\r\n        String sql \= "SELECT NAME FROM SYSIBM.SYSTABLES WHERE CREATOR \= '${schemaName}'";\r\n        \r\n        // Prepare statement\r\n        PreparedStatement stmt \= con.prepareStatement(sql);\r\n        \r\n        // Execute statement\r\n        stmt.execute();\r\n        rs[0] \= stmt.getResultSet();\r\n    }\r\n}</template><template autoinsert\="false" context\="db2luw_sp_java" deleted\="false" description\="Returns the count of rows from SYSIBM.SYSTABLES that match the current schema and IN parameter." enabled\="true" name\="Deploy &amp; Run\: (Dynamic JDBC) IN/OUT parameters">\# DDL Template\r\nCREATE PROCEDURE ${name} (IN VARNAME VARCHAR(128), OUT VARCOUNT INTEGER)\r\n    NOT DETERMINISTIC\r\n    LANGUAGE Java\r\n    EXTERNAL NAME '${jarName}\:${javaPackage}.${className}.x_${routineName}'\r\n    FENCED\r\n    THREADSAFE\r\n    PARAMETER STYLE JAVA\r\n\# Java Template\r\n\r\npackage ${javaPackage};\r\n\r\nimport java.sql.Connection;\r\nimport java.sql.DriverManager;\r\nimport java.sql.PreparedStatement;\r\nimport java.sql.ResultSet;\r\nimport java.sql.SQLException;\r\n\r\npublic class ${className}{\r\n    public static void x_${routineName} (String VARNAME, int[] VARCOUNT) throws SQLException, Exception {      \r\n        // \#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\r\n \t    // \# The example SQL statement\r\n        // \# returns count of all tables created by ${schemaName} and like VARNAME\r\n        // \#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\r\n        // Get connection to the database\r\n        Connection con \= DriverManager.getConnection("jdbc\:default\:connection");\r\n\r\n        // SQL to execute       \r\n        String sql \= "SELECT COUNT(*) FROM SYSIBM.SYSTABLES WHERE CREATOR \= '${schemaName}' AND NAME LIKE '%" + VARNAME + "%'";\r\n\r\n        // Prepare statement\r\n        PreparedStatement stmt \= con.prepareStatement(sql);\r\n    \r\n        // Execute statement\r\n        stmt.execute();\r\n        ResultSet rs \= stmt.getResultSet();\r\n        \r\n        if (rs.next())\r\n            VARCOUNT[0] \= rs.getInt(1);\r\n    }\r\n}</template><template autoinsert\="false" context\="db2luw_sp_java" deleted\="false" description\="You specify the SQL to execute and the values are returned." enabled\="true" name\="Custom\: (Dynamic JDBC) You supply the SQL, returns a result set">\# DDL Template\r\nCREATE PROCEDURE ${name} ()\r\n    DYNAMIC RESULT SETS 1\r\n    NOT DETERMINISTIC\r\n    LANGUAGE Java\r\n    EXTERNAL NAME '${jarName}\:${javaPackage}.${className}.x_${routineName}'\r\n    FENCED\r\n    THREADSAFE\r\nPARAMETER STYLE JAVA\r\n\# Java Template\r\npackage ${javaPackage};\r\n\r\nimport java.sql.Connection;\r\nimport java.sql.DriverManager;\r\nimport java.sql.PreparedStatement;\r\nimport java.sql.ResultSet;\r\nimport java.sql.SQLException;\r\n\r\npublic class ${className}{\r\n    public static void x_${routineName} (ResultSet[] rs) throws SQLException, Exception {\r\n        // Get connection to the database\r\n        Connection con \= DriverManager.getConnection("jdbc\:default\:connection");\r\n\r\n        // \#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\r\n\t    // \# Replace the SQL statement with your statement.\r\n\t    // \#  Note\: Be sure enclose the SQL statement in quotes.\r\n\t    // \#\r\n\t    // \# The example SQL statement SELECT NAME FROM SYSIBM.SYSTABLES\r\n\t    // \# returns all names from SYSIBM.SYSTABLES.\r\n\t    // \#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\r\n        String sql \=  "SELECT NAME FROM SYSIBM.SYSTABLES";\r\n\r\n        // Prepare statement\r\n        PreparedStatement stmt \= con.prepareStatement(sql);\r\n        \r\n        // Execute statement\r\n        stmt.execute();\r\n        rs[0] \= stmt.getResultSet();\r\n    }\r\n}</template><template autoinsert\="false" context\="db2luw_sp_java" deleted\="false" description\="Open a cursor and retrieve values from SYSIBM.SYSTABLES." enabled\="true" name\="Deploy &amp; Run\: (Static SQLJ) Return a result set">\# DDL Template\r\nCREATE PROCEDURE ${name} ()\r\n    DYNAMIC RESULT SETS 1\r\n    NOT DETERMINISTIC\r\n    LANGUAGE Java\r\n    EXTERNAL NAME '${jarName}\:${javaPackage}.${className}.x_${routineName}'\r\n    FENCED\r\n    THREADSAFE\r\n    PARAMETER STYLE JAVA\r\n\# Java Template SQLJ\r\npackage ${javaPackage};\r\n\r\nimport java.sql.Connection;\r\nimport java.sql.DriverManager;\r\nimport java.sql.PreparedStatement;\r\nimport java.sql.ResultSet;\r\nimport java.sql.SQLException;\r\n\r\n\#sql context SPContext;\r\n\#sql iterator ${routineName}_Cursor1 (java.lang.String );\r\n\r\npublic class ${className} {\r\n    public static void x_${routineName}(ResultSet[] rs) throws SQLException, Exception {\r\n        // \#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\r\n\t    // \# The example SQL statement\r\n        // \# returns all tables created by ${schemaName}\r\n        // \#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\r\n        ${routineName}_Cursor1 cursor1 \= null;\r\n        SPContext ctx \= null;\r\n        \r\n        try {\r\n            ctx \= new SPContext("jdbc\:default\:connection", false);\r\n\r\n            \#sql [ctx] cursor1 \= { SELECT NAME FROM SYSIBM.SYSTABLES WHERE CREATOR \= '${schemaName}' ORDER BY NAME };\r\n            \r\n            rs[0] \= cursor1.getResultSet();\r\n        }\r\n        catch (SQLException e) {\r\n            throw(e);\r\n        }\r\n    }\r\n}</template><template autoinsert\="false" context\="db2luw_sp_java" deleted\="false" description\="Returns the count of rows from SYSIBM.SYSTABLES that match the current schema and IN parameter." enabled\="true" name\="Deploy &amp; Run\: (Static SQLJ) IN/OUT parameters ">\# DDL Template\r\nCREATE PROCEDURE ${name} (IN VARNAME VARCHAR(128), OUT VARCOUNT INTEGER)\r\n    NOT DETERMINISTIC\r\n    LANGUAGE Java\r\n    EXTERNAL NAME '${jarName}\:${javaPackage}.${className}.x_${routineName}'\r\n    FENCED\r\n    THREADSAFE\r\n    PARAMETER STYLE JAVA\r\n\# Java Template SQLJ\r\npackage ${javaPackage};\r\n\r\nimport java.sql.Connection;\r\nimport java.sql.DriverManager;\r\nimport java.sql.PreparedStatement;\r\nimport java.sql.ResultSet;\r\nimport java.sql.SQLException;\r\n\r\n\#sql context SPContext;\r\n\#sql iterator ${routineName}_Cursor1 ( java.lang.Integer );\r\n\r\npublic class ${className}{\r\n    public static void x_${routineName} (java.lang.String VARNAME, int[] VARCOUNT) throws SQLException, Exception {\r\n        ${routineName}_Cursor1 cursor1 \= null;\r\n        SPContext ctx \= null;\r\n        // \#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\r\n\t    // \# The example SQL statement\r\n        // \# returns the count of all tables created by ${schemaName} and like VARNAME\r\n        // \#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\r\n        try {\r\n            ctx \= new SPContext("jdbc\:default\:connection", false);\r\n\r\n            \#sql [ctx] cursor1 \= { SELECT COUNT(*) FROM SYSIBM.SYSTABLES WHERE CREATOR \= '${schemaName}' AND NAME LIKE \:VARNAME };\r\n            \r\n            ResultSet rs \= cursor1.getResultSet();\r\n            if (rs.next())\r\n                VARCOUNT[0] \= rs.getInt(1);\r\n        }\r\n        catch (SQLException e) {\r\n          throw(e);\r\n        }\r\n        finally {\r\n            // Close resources\r\n            try {\r\n                if (cursor1 \!\= null)\r\n                    cursor1.close();\r\n                if (ctx \!\= null)\r\n                    ctx.close();\r\n            } catch (SQLException e2) { /* Ignore */\r\n            }\r\n        }\r\n    }\r\n}</template><template autoinsert\="false" context\="db2luw_sp_java" deleted\="false" description\="You specify the SQL to execute and the values are returned." enabled\="true" name\="Custom\: (Static SQLJ) You supply the SQL, returns a result set">\# DDL Template\r\nCREATE PROCEDURE ${name} ()\r\n    DYNAMIC RESULT SETS 1\r\n    NOT DETERMINISTIC\r\n    LANGUAGE Java\r\n    EXTERNAL NAME '${jarName}\:${javaPackage}.${className}.x_${routineName}'\r\n    FENCED\r\n    THREADSAFE\r\n    PARAMETER STYLE JAVA\r\n\# Java Template SQLJ\r\npackage ${javaPackage};\r\n\r\nimport java.sql.Connection;\r\nimport java.sql.DriverManager;\r\nimport java.sql.PreparedStatement;\r\nimport java.sql.ResultSet;\r\nimport java.sql.SQLException;\r\n\r\n\#sql context SPContext;\r\n\#sql iterator ${routineName}_Cursor1 (java.lang.String );\r\n\r\npublic class ${className}{\r\n    public static void x_${routineName}(ResultSet[] rs)  throws SQLException, Exception {\r\n        ${routineName}_Cursor1 cursor1 \= null;\r\n        SPContext ctx \= null;\r\n        try {\r\n            ctx \= new SPContext("jdbc\:default\:connection", false);\r\n\r\n            // \#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\r\n\t        // \# Replace the SQL statement with your statement.\r\n\t        // \#  Note\: Be sure enclose the SQL statement in braces.\r\n\t        // \#\r\n\t        // \# The example SQL statement SELECT NAME FROM SYSIBM.SYSTABLES\r\n\t        // \# returns all names from SYSIBM.SYSTABLES.\r\n\t        // \#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\r\n            \#sql [ctx] cursor1 \= { SELECT NAME FROM SYSIBM.SYSTABLES };\r\n            \r\n            rs[0] \= cursor1.getResultSet();\r\n        }\r\n        catch (SQLException e) {\r\n          throw(e);\r\n        }\r\n    }\r\n}</template><template autoinsert\="false" context\="db2zos_sp_java" deleted\="false" description\="Open a cursor and retrieve values from SYSIBM.SYSTABLES." enabled\="true" name\="Deploy &amp; Run\: (Dynamic JDBC) Return a result set">\# DDL Template\r\nCREATE PROCEDURE ${name} ()\r\n    RESULT SETS 1\r\n    NOT DETERMINISTIC\r\n    LANGUAGE Java\r\n    PARAMETER STYLE JAVA \r\n    EXTERNAL NAME '${jarName}\:${javaPackage}.${className}.x_${routineName}'\r\n    COLLID ${collid}\r\n    WLM ENVIRONMENT ${wlmEnvironment}\r\n\# Java Template\r\npackage ${javaPackage};\r\n\r\nimport java.sql.Connection;\r\nimport java.sql.DriverManager;\r\nimport java.sql.PreparedStatement;\r\nimport java.sql.ResultSet;\r\nimport java.sql.SQLException;\r\n\r\npublic class ${className} {\r\n    public static void x_${routineName} (ResultSet[] rs) throws SQLException, Exception {\r\n        // \#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\r\n \t    // \# The example SQL statement\r\n        // \# returns all tables created by ${schemaName}\r\n        // \#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\r\n        // Get connection to the database\r\n        Connection con \= DriverManager.getConnection("jdbc\:default\:connection");\r\n\r\n        // SQL to execute\r\n        String sql \= "SELECT NAME FROM SYSIBM.SYSTABLES WHERE CREATOR \= '${schemaName}' ORDER BY NAME";\r\n        \r\n        // Prepare statement\r\n        PreparedStatement stmt \= con.prepareStatement(sql);\r\n        \r\n        // Execute statement\r\n        stmt.execute();\r\n        rs[0] \= stmt.getResultSet();\r\n    }\r\n}</template><template autoinsert\="false" context\="db2zos_sp_java" deleted\="false" description\="Returns the count of rows from SYSIBM.SYSTABLES that match the current schema and IN parameter." enabled\="true" name\="Deploy &amp; Run\: (Dynamic JDBC) IN/OUT parameters">\# DDL Template\r\nCREATE PROCEDURE ${name} (IN VARNAME VARCHAR(128), OUT VARCOUNT INTEGER)\r\n    NOT DETERMINISTIC\r\n    LANGUAGE Java\r\n    PARAMETER STYLE JAVA \r\n    EXTERNAL NAME '${jarName}\:${javaPackage}.${className}.x_${routineName}'\r\n    COLLID ${collid}\r\n    WLM ENVIRONMENT ${wlmEnvironment}\r\n\# Java Template\r\npackage ${javaPackage};\r\n\r\nimport java.sql.Connection;\r\nimport java.sql.DriverManager;\r\nimport java.sql.PreparedStatement;\r\nimport java.sql.ResultSet;\r\nimport java.sql.SQLException;\r\n\r\npublic class ${className} {\r\n    public static void x_${routineName} (String VARNAME, int[] VARCOUNT) throws SQLException, Exception {\r\n        // \#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\r\n\t    // \# The example SQL statement\r\n        // \# returns count of all tables created by ${schemaName} and like VARNAME\r\n        // \#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\r\n        // Get connection to the database\r\n        Connection con \= DriverManager.getConnection("jdbc\:default\:connection");\r\n\r\n        // SQL to execute\r\n        String sql \=  "SELECT COUNT(*) FROM SYSIBM.SYSTABLES WHERE CREATOR \= '${schemaName}' AND NAME LIKE '%" + VARNAME + "%'";\r\n             \r\n        // Prepare statement\r\n        PreparedStatement stmt \= con.prepareStatement(sql);\r\n        \r\n        // Execute statement\r\n        stmt.execute();\r\n        ResultSet rs \= stmt.getResultSet();\r\n        \r\n        if (rs.next())\r\n            VARCOUNT[0] \= rs.getInt(1);\r\n    }\r\n}</template><template autoinsert\="false" context\="db2zos_sp_java" deleted\="false" description\="You specify the SQL to execute and the values are returned." enabled\="true" name\="Custom\: (Dynamic JDBC) You supply the SQL, returns a result set">\# DDL Template\r\nCREATE PROCEDURE ${name} ()\r\n    RESULT SETS 1\r\n    NOT DETERMINISTIC\r\n    LANGUAGE Java\r\n    PARAMETER STYLE JAVA \r\n    EXTERNAL NAME '${jarName}\:${javaPackage}.${className}.x_${routineName}'\r\n    COLLID ${collid}\r\n    WLM ENVIRONMENT ${wlmEnvironment}\r\n\# Java Template\r\npackage ${javaPackage};\r\n\r\nimport java.sql.Connection;\r\nimport java.sql.DriverManager;\r\nimport java.sql.PreparedStatement;\r\nimport java.sql.ResultSet;\r\nimport java.sql.SQLException;\r\n\r\npublic class ${className} {\r\n    public static void x_${routineName} (ResultSet[] rs) throws SQLException, Exception {\r\n        // Get connection to the database\r\n        Connection con \= DriverManager.getConnection("jdbc\:default\:connection");\r\n\r\n        // \#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\r\n\t    // \# Replace the SQL statement with your statement.\r\n\t    // \#  Note\: Be sure enclose the SQL statement in quotes.\r\n\t    // \#\r\n\t    // \# The example SQL statement SELECT NAME FROM SYSIBM.SYSTABLES\r\n\t    // \# returns all names from SYSIBM.SYSTABLES.\r\n\t    // \#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\r\n        String sql \=  "SELECT NAME FROM SYSIBM.SYSTABLES";\r\n\r\n        // Prepare statement     \r\n        PreparedStatement stmt \= con.prepareStatement(sql);\r\n        \r\n        // Execute statement\r\n        stmt.execute();\r\n        rs[0] \= stmt.getResultSet();\r\n    }\r\n}</template><template autoinsert\="false" context\="db2zos_sp_java" deleted\="false" description\="Open a cursor and retrieve values from SYSIBM.SYSTABLES." enabled\="true" name\="Deploy &amp; Run\: (Static SQLJ) Return a result set">\# DDL Template\r\nCREATE PROCEDURE ${name} ()\r\n    RESULT SETS 1\r\n    EXTERNAL NAME '${jarName}\:${javaPackage}.${className}.x_${routineName}'\r\n    LANGUAGE Java\r\n    PARAMETER STYLE JAVA\r\n    NOT DETERMINISTIC\r\n    COLLID ${collid}\r\n    WLM ENVIRONMENT ${wlmEnvironment}\r\n\# Java Template SQLJ\r\npackage ${javaPackage};\r\n\r\nimport java.sql.Connection;\r\nimport java.sql.DriverManager;\r\nimport java.sql.PreparedStatement;\r\nimport java.sql.ResultSet;\r\nimport java.sql.SQLException;\r\n\r\n\#sql context SPContext;\r\n\#sql iterator ${routineName}_Cursor1 ( java.lang.String );\r\n\r\npublic class ${className} {\r\n    public static void x_${routineName} (ResultSet[] rs) throws SQLException, Exception {\r\n        // \#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\r\n \t    // \# The example SQL statement\r\n        // \# returns count of all tables created by ${schemaName} and like VARNAME\r\n        // \#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\r\n        ${routineName}_Cursor1 cursor1 \= null;\r\n        SPContext ctx \= null;\r\n        try {\r\n            ctx \= new SPContext("jdbc\:default\:connection", false);\r\n\r\n            \#sql [ctx] cursor1 \= { SELECT NAME FROM SYSIBM.SYSTABLES WHERE CREATOR \=  '${schemaName}' ORDER BY NAME};\r\n            \r\n            rs[0] \= cursor1.getResultSet();\r\n        }\r\n        catch (SQLException e) {\r\n            throw(e);\r\n        }\r\n    }\r\n}</template><template autoinsert\="false" context\="db2zos_sp_java" deleted\="false" description\="Returns the count of rows from SYSIBM.SYSTABLES that match the current schema and IN parameter." enabled\="true" name\="Deploy &amp; Run\: (Static SQLJ) IN/OUT parameters ">\# DDL Template\r\nCREATE PROCEDURE ${name} (IN VARNAME VARCHAR(128), OUT VARCOUNT INTEGER)\r\n    EXTERNAL NAME '${jarName}\:${javaPackage}.${className}.x_${routineName}'\r\n    LANGUAGE Java\r\n    PARAMETER STYLE JAVA\r\n    NOT DETERMINISTIC\r\n    COLLID ${collid}\r\n    WLM ENVIRONMENT ${wlmEnvironment}\r\n\# Java Template SQLJ\r\npackage ${javaPackage};\r\n\r\nimport java.sql.Connection;\r\nimport java.sql.DriverManager;\r\nimport java.sql.PreparedStatement;\r\nimport java.sql.ResultSet;\r\nimport java.sql.SQLException;\r\n\r\n\#sql context SPContext;\r\n\#sql iterator ${routineName}_Cursor1 ( java.lang.Integer );\r\n\r\npublic class ${className} {\r\n    public static void x_${routineName} (String VARNAME, int[] VARCOUNT) throws SQLException, Exception {\r\n        ${routineName}_Cursor1 cursor1 \= null;\r\n        SPContext ctx \= null;\r\n\r\n        // \#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\r\n\t    // \# Replace the SQL statement with your statement.\r\n\t    // \#  Note\: Be sure enclose the SQL statement in braces.\r\n\t    // \#\r\n\t    // \# The example SQL statement\r\n        // \# returns count of all tables created by ${schemaName} and like VARNAME\r\n        // \#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\r\n        try {\r\n            ctx \= new SPContext("jdbc\:default\:connection", false);\r\n\r\n            \#sql [ctx] cursor1 \= { SELECT COUNT(*) FROM SYSIBM.SYSTABLES WHERE CREATOR \=  '${schemaName}' AND NAME LIKE \:VARNAME};\r\n            \r\n            ResultSet rs \= cursor1.getResultSet();\r\n            if (rs.next())\r\n              VARCOUNT[0] \= rs.getInt(1);\r\n        }\r\n        catch (SQLException e) {\r\n          throw(e);\r\n        }\r\n    }\r\n}</template><template autoinsert\="false" context\="db2zos_sp_java" deleted\="false" description\="You specify the SQL to execute and the values are returned." enabled\="true" name\="Custom\: (Static SQLJ) You supply the SQL, returns a result set">\# DDL Template\r\nCREATE PROCEDURE ${name} ()\r\n    RESULT SETS 1\r\n    EXTERNAL NAME '${jarName}\:${javaPackage}.${className}.x_${routineName}'\r\n    LANGUAGE Java\r\n    PARAMETER STYLE JAVA\r\n    NOT DETERMINISTIC\r\n    COLLID ${collid}\r\n    WLM ENVIRONMENT ${wlmEnvironment}\r\n\# Java Template SQLJ\r\npackage ${javaPackage};\r\n\r\nimport java.sql.Connection;\r\nimport java.sql.DriverManager;\r\nimport java.sql.PreparedStatement;\r\nimport java.sql.ResultSet;\r\nimport java.sql.SQLException;\r\n\r\n\#sql context SPContext;\r\n\#sql iterator ${routineName}_Cursor1 ( java.lang.String );\r\n\r\npublic class ${className} {\r\n    public static void x_${routineName} (ResultSet[] rs) throws SQLException, Exception {\r\n        ${routineName}_Cursor1 cursor1 \= null;\r\n        SPContext ctx \= null;\r\n        try {\r\n            ctx \= new SPContext("jdbc\:default\:connection", false);\r\n\r\n            // \#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\r\n\t        // \# Replace the SQL statement with your statement.\r\n\t        // \#  Note\: Be sure enclose the SQL statement in braces.\r\n\t        // \#\r\n\t        // \# The example SQL statement SELECT NAME FROM SYSIBM.SYSTABLES\r\n            // \# returns all names from SYSIBM.SYSTABLES\r\n            // \#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\r\n\t\t\t\#sql [ctx] cursor1 \= { SELECT NAME FROM SYSIBM.SYSTABLES };\r\n\r\n            rs[0] \= cursor1.getResultSet();\r\n        } catch (SQLException e) {\r\n          throw(e);\r\n          }\r\n          finally {\r\n            // Close resources\r\n            try {\r\n                if (cursor1 \!\= null)\r\n                    cursor1.close();\r\n                if (ctx \!\= null)\r\n                    ctx.close();\r\n            } catch (SQLException e2) { /* Ignore */}\r\n        }\r\n    }\r\n}</template><template autoinsert\="false" context\="db2i5_sp_java" deleted\="false" description\="Open a cursor and retrieve values from QSYS2.TABLES." enabled\="true" name\="Deploy &amp; Run\: (Dynamic JDBC) Return a result set">\# DDL Template\r\nCREATE PROCEDURE ${name} ()\r\n    RESULT SETS 1\r\n    NOT DETERMINISTIC\r\n    LANGUAGE Java\r\n    EXTERNAL NAME '${jarName}\:${javaPackage}.${className}.x_${routineName}'\r\n    FENCED\r\n    PARAMETER STYLE JAVA\r\n\# Java Template\r\npackage ${javaPackage};\r\n\r\nimport java.sql.Connection;\r\nimport java.sql.DriverManager;\r\nimport java.sql.PreparedStatement;\r\nimport java.sql.ResultSet;\r\nimport java.sql.SQLException;\r\n\r\npublic class ${className} {\r\n    public static void x_${routineName}( ResultSet[] rs) throws Exception {\r\n        // Get connection to the database\r\n        Connection con \= DriverManager.getConnection("jdbc\:default\:connection");\r\n\r\n        PreparedStatement stmt \= null;\r\n\r\n        try {\r\n            String sql \= "SELECT TABLE_NAME FROM QSYS2.TABLES WHERE TABLE_SCHEMA \= '${schemaName}' ORDER BY TABLE_NAME";\r\n            \r\n            // Prepare statement\r\n            stmt \= con.prepareStatement(sql);\r\n            \r\n            // Execute statement \r\n            stmt.execute();\r\n            rs[0] \= stmt.getResultSet();\r\n        }\r\n        catch (SQLException e) {\r\n            throw e;\r\n        }\r\n    }\r\n}</template><template autoinsert\="false" context\="db2i5_sp_java" deleted\="false" description\="Returns the count of rows from QSYS2.TABLES that match the current schema and IN parameter." enabled\="true" name\="Deploy &amp; Run\: (Dynamic JDBC) IN/OUT parameters">\# DDL Template\r\nCREATE PROCEDURE ${name} (IN VARNAME VARCHAR(128), OUT VARCOUNT INTEGER)\r\n    NOT DETERMINISTIC\r\n    LANGUAGE Java\r\n    EXTERNAL NAME '${jarName}\:${javaPackage}.${className}.x_${routineName}'\r\n    FENCED\r\n    PARAMETER STYLE JAVA\r\n\# Java Template\r\npackage ${javaPackage};\r\n\r\nimport java.sql.Connection;\r\nimport java.sql.DriverManager;\r\nimport java.sql.PreparedStatement;\r\nimport java.sql.ResultSet;\r\nimport java.sql.SQLException;\r\n\r\npublic class ${className} {\r\n    public static void x_${routineName}(String VARNAME, int[] VARCOUNT) throws Exception {\r\n        // \#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\r\n\t    // \# The example SQL statement\r\n        // \# returns count all tables created by ${schemaName} and like VARNAME\r\n        // \#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\r\n        // Get connection to the database\r\n        Connection con \= DriverManager.getConnection("jdbc\:default\:connection");\r\n        \r\n        PreparedStatement stmt \= null;\r\n        try {\r\n            String sql \= "SELECT COUNT(*) FROM QSYS2.TABLES WHERE TABLE_SCHEMA \= '${schemaName}' AND TABLE_NAME LIKE '%" + VARNAME + "%'";           \r\n            // Prepare statement\r\n            stmt \= con.prepareStatement(sql);\r\n            \r\n            // Execute statement \r\n            boolean hasResultSet \= stmt.execute();\r\n            ResultSet rs \= stmt.getResultSet();\r\n            \r\n            if (rs.next())\r\n            VARCOUNT[0] \= rs.getInt(1);\r\n        }\r\n        catch (SQLException e) {\r\n            throw e;\r\n        }\r\n    }\r\n}</template><template autoinsert\="false" context\="db2i5_sp_java" deleted\="false" description\="You specify the SQL to execute and the values are returned." enabled\="true" name\="Custom\: (Dynamic JDBC) You supply the SQL, returns a result set">\# DDL Template\r\nCREATE PROCEDURE ${name} ()\r\n    RESULT SETS 1\r\n    NOT DETERMINISTIC\r\n    LANGUAGE Java\r\n    EXTERNAL NAME '${jarName}\:${javaPackage}.${className}.x_${routineName}'\r\n    FENCED\r\n    PARAMETER STYLE JAVA\r\n\# Java Template\r\npackage ${javaPackage};\r\n\r\nimport java.sql.Connection;\r\nimport java.sql.DriverManager;\r\nimport java.sql.PreparedStatement;\r\nimport java.sql.ResultSet;\r\nimport java.sql.SQLException;\r\n\r\npublic class ${className} {\r\n    public static void x_${routineName}( ResultSet[] rs) throws Exception {\r\n        // Get connection to the database\r\n        Connection con \= DriverManager.getConnection("jdbc\:default\:connection");\r\n        \r\n        PreparedStatement stmt \= null;\r\n        try {\r\n            // \#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\r\n\t        // \# Replace the SQL statement with your statement.\r\n\t        // \#  Note\: Be sure enclose the SQL statement in quotes.\r\n\t        // \#\r\n\t        // \# The example SQL statement SELECT TABLE_NAME FROM QSYS.TABLES\r\n            // \# returns all names from QSYS.TABLES\r\n            // \#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\r\n            String sql \=  "SELECT TABLE_NAME FROM QSYS.TABLES";\r\n            \r\n            stmt \= con.prepareStatement(sql);\r\n            stmt.execute();\r\n            rs[0] \= stmt.getResultSet();\r\n        } catch (SQLException e) {\r\n            throw e;\r\n        }\r\n    }\r\n}</template><template autoinsert\="false" context\="db2i5_sp_java" deleted\="false" description\="Open a cursor and retrieve values from QSYS2.TABLES." enabled\="true" name\="Deploy &amp; Run\: (Static SQLJ) Return a result set">\# DDL Template\r\nCREATE PROCEDURE ${name} ()\r\n    RESULT SETS 1\r\n    NOT DETERMINISTIC\r\n    LANGUAGE Java\r\n    EXTERNAL NAME '${jarName}\:${javaPackage}.${className}.x_${routineName}'\r\n    FENCED\r\n    PARAMETER STYLE JAVA\r\n\# Java Template SQLJ\r\npackage ${javaPackage};\r\n\r\nimport java.sql.Connection;\r\nimport java.sql.DriverManager;\r\nimport java.sql.PreparedStatement;\r\nimport java.sql.ResultSet;\r\nimport java.sql.SQLException;\r\n\r\n\#sql context SPContext;\r\n\#sql iterator ${routineName}_Cursor1 ( java.lang.String );\r\n\r\npublic class ${className} {\r\n    public static void x_${routineName}(ResultSet[] rs) throws SQLException,  Exception {\r\n        // \#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\r\n        // \# The example SQL statement\r\n        // \# returns all tables created by ${schemaName}\r\n        // \#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\r\n        ${routineName}_Cursor1 cursor1 \= null;\r\n        SPContext ctx \= null;\r\n        try {\r\n            ctx \= new SPContext("jdbc\:default\:connection", false);\r\n            \r\n            \#sql [ctx] cursor1 \= { SELECT TABLE_NAME FROM QSYS2.TABLES WHERE TABLE_SCHEMA \= '${schemaName}' ORDER BY TABLE_NAME };\r\n            \r\n            rs[0] \= cursor1.getResultSet();\r\n        }\r\n        catch (SQLException e) {\r\n           try {\r\n                if (cursor1 \!\= null)\r\n                    cursor1.close();\r\n                if (ctx \!\= null)\r\n                    ctx.close();\r\n            } catch (SQLException e2) {\r\n            }\r\n            throw(e);\r\n        }\r\n    }\r\n}</template><template autoinsert\="false" context\="db2i5_sp_java" deleted\="false" description\="Returns the count of rows from QSYS2.TABLES that match the current schema and IN parameter." enabled\="true" name\="Deploy &amp; Run\: (Static SQLJ) IN/OUT parameters ">\# DDL Template\r\nCREATE PROCEDURE ${name} (IN VARNAME VARCHAR(128), OUT VARCOUNT INTEGER)\r\n    NOT DETERMINISTIC\r\n    LANGUAGE Java\r\n    EXTERNAL NAME '${jarName}\:${javaPackage}.${className}.x_${routineName}'\r\n    FENCED\r\n    PARAMETER STYLE JAVA\r\n\# Java Template SQLJ\r\npackage ${javaPackage};\r\n\r\nimport java.sql.Connection;\r\nimport java.sql.DriverManager;\r\nimport java.sql.PreparedStatement;\r\nimport java.sql.ResultSet;\r\nimport java.sql.SQLException;\r\n\r\n\#sql context SPContext;\r\n\#sql iterator ${routineName}_Cursor1 ( java.lang.Integer );\r\n\r\npublic class ${className} {\r\n    public static void x_${routineName}(String VARNAME, int[] VARCOUNT) throws SQLException, Exception {\r\n        // \#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\r\n\t    // \# The example SQL statement\r\n        // \# returns all tables created by ${schemaName} and like VARNAME\r\n        // \#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\r\n        ${routineName}_Cursor1 cursor1 \= null;\r\n        SPContext ctx \= null;\r\n        try {\r\n            ctx \= new SPContext("jdbc\:default\:connection", false);\r\n\r\n            \#sql [ctx] cursor1 \= { SELECT COUNT(*) FROM QSYS2.TABLES WHERE TABLE_SCHEMA \= '${schemaName}' AND TABLE_NAME LIKE \:VARNAME};\r\n            \r\n            ResultSet rs \= cursor1.getResultSet();\r\n            if (rs.next())\r\n                VARCOUNT[0] \= rs.getInt(1);\r\n        }\r\n        catch (SQLException e) {\r\n            throw(e);\r\n        }\r\n        finally {\r\n            try {\r\n                if (cursor1 \!\= null)\r\n                    cursor1.close();\r\n                  if (ctx \!\= null)\r\n                    ctx.close();\r\n            }\r\n            catch (SQLException e2) {\r\n            }\r\n        }\r\n    }\r\n}</template><template autoinsert\="false" context\="db2i5_sp_java" deleted\="false" description\="You specify the SQL to execute and the values are returned." enabled\="true" name\="Custom\: (Static SQLJ) You supply the SQL, returns a result set">\# DDL Template\r\nCREATE PROCEDURE ${name} ()\r\n    RESULT SETS 1\r\n    NOT DETERMINISTIC\r\n    LANGUAGE Java\r\n    EXTERNAL NAME 'DS_${timestamp}\:${javaPackage}.${className}.x${routineName}'\r\n    FENCED\r\n    PARAMETER STYLE JAVA\r\n\# Java Template SQLJ\r\npackage ${javaPackage};\r\n\r\nimport java.sql.Connection;\r\nimport java.sql.DriverManager;\r\nimport java.sql.PreparedStatement;\r\nimport java.sql.ResultSet;\r\nimport java.sql.SQLException;\r\n\r\n\#sql context SPContext;\r\n\#sql iterator ${routineName}_Cursor1 ( java.lang.String );\r\n\r\npublic class ${className} {\r\n    public static void x${routineName}(ResultSet[] rs) throws SQLException, Exception {\r\n        ${routineName}_Cursor1 cursor1 \= null;\r\n        SPContext ctx \= null;\r\n        try {\r\n            ctx \= new SPContext("jdbc\:default\:connection", false);\r\n \r\n            // \#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\r\n\t        // \# Replace the SQL statement with your statement.\r\n\t        // \#  Note\: Be sure enclose the SQL statement in braces.\r\n\t        // \#\r\n\t        // \# The example SQL statement SELECT TABLE_NAME FROM QSYS2.TABLES\r\n            // \# returns all table names from QSYS2.TABLES\r\n            // \#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\r\n            \#sql [ctx] cursor1 \= { SELECT TABLE_NAME FROM QSYS2.TABLES };\r\n\r\n\t\t\trs[0] \= cursor1.getResultSet();\r\n        }\r\n        catch (SQLException e) {\r\n          throw(e);\r\n        }\r\n        finally {\r\n            try {\r\n                if (cursor1 \!\= null)\r\n                    cursor1.close();\r\n                if (ctx \!\= null)\r\n                    ctx.close();\r\n            } \r\n            catch (SQLException e2) {\r\n            }\r\n        }\r\n    }\r\n}</template><template autoinsert\="false" context\="derby_sp_java" deleted\="false" description\="Open a cursor and retrieve values from SYSTABLES." enabled\="true" name\="Deploy &amp; Run\: (Dynamic JDBC) Return a result set">\# DDL Template\r\nCREATE PROCEDURE ${name} ()\r\n    DYNAMIC RESULT SETS 1\r\n    LANGUAGE Java\r\n    EXTERNAL NAME '${javaPackage}.${className}.x${routineName}'\r\n    PARAMETER STYLE JAVA\r\n\# Java Template\r\npackage ${javaPackage};\r\n\r\nimport java.sql.*;\r\n\r\npublic class ${className} {\r\n    public static void x${routineName}(ResultSet[] rs) throws SQLException,\r\n            Exception {\r\n        Connection con \= DriverManager.getConnection("jdbc\:default\:connection");\r\n        String sql \= "SELECT TABNAME FROM SYSTABLES WHERE OWNER \= '${schemaName}'";\r\n        PreparedStatement stmt \= con.prepareStatement(sql);\r\n        boolean bFlag \= stmt.execute();\r\n        rs[0] \= stmt.getResultSet();\r\n    }\r\n}</template><template autoinsert\="false" context\="derby_sp_java" deleted\="false" description\="You specify the SQL to execute and the values are returned." enabled\="true" name\="Custom\: (Dynamic JDBC) You supply the SQL, returns a result set">\# DDL Template\r\n\# DDL Template\r\nCREATE PROCEDURE ${name} ()\r\n    DYNAMIC RESULT SETS 1\r\n    LANGUAGE Java\r\n    EXTERNAL NAME '${javaPackage}.${className}.x${routineName}'\r\n    PARAMETER STYLE JAVA\r\n\# Java Template\r\npackage ${javaPackage};\r\n\r\nimport java.sql.*;\r\n\r\npublic class ${className} {\r\n    public static void x${routineName}(ResultSet[] rs) throws SQLException,\r\n            Exception {\r\n        Connection con \= DriverManager.getConnection("jdbc\:default\:connection");\r\n        // \#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\r\n\t    // \# Replace the SQL statement with your statement.\r\n\t    // \#  Note\: Be sure enclose the SQL statement in quotes.\r\n\t    // \#\r\n\t    // \# The example SQL statement SELECT TABLE_NAME FROM SYSTABLES\r\n        // \# returns all table names from SYSTABLES\r\n        // \#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\r\n        String sql \=  "SELECT TABLE_NAME FROM SYSTABLES";\r\n        \r\n        PreparedStatement stmt \= con.prepareStatement(sql);\r\n        boolean bFlag \= stmt.execute();\r\n        rs[0] \= stmt.getResultSet();\r\n    }\r\n}</template><template autoinsert\="false" context\="derby_sp_java" deleted\="false" description\="Open a cursor and retrieve values from SYSTABLES." enabled\="true" name\="Deploy &amp; Run\: (Static SQLJ) Return a result set">\# DDL Template\r\nCREATE PROCEDURE ${name} ()\r\n    DYNAMIC RESULT SETS 1\r\n    LANGUAGE Java\r\n    EXTERNAL NAME '${javaPackage}.${className}.x${routineName}'\r\n    PARAMETER STYLE JAVA\r\n\# Java Template SQLJ\r\npackage ${javaPackage};\r\n\r\nimport java.sql.*;\r\nimport sqlj.runtime.*;\r\nimport sqlj.runtime.ref.*;\r\n\r\n\#sql context SPContext;\r\n\#sql iterator ${routineName}_Cursor1 ( );\r\n\r\npublic class ${className} {\r\n    public static void x${routineName}(ResultSet[] rs) throws SQLException,\r\n            Exception {\r\n        ${routineName}_Cursor1 cursor1 \= null;\r\n        SPContext ctx \= null;\r\n        try {\r\n            ctx \= new SPContext("jdbc\:default\:connection", false);\r\n            \r\n            \#sql [ctx] cursor1 \= { SELECT ALIAS FROM SYS.SYSALIASES WHERE OWNER \= '${schemaName}'};\r\n            \r\n            rs[0] \= cursor1.getResultSet();\r\n        } catch (SQLException e) {\r\n\r\n            // Close open resources\r\n            try {\r\n                if (cursor1 \!\= null)\r\n                    cursor1.close();\r\n                if (ctx \!\= null)\r\n                    ctx.close();\r\n            } catch (SQLException e2) {\r\n            }\r\n            throw e;\r\n        }\r\n    }\r\n}</template><template autoinsert\="false" context\="derby_sp_java" deleted\="false" description\="You specify the SQL to execute and the values are returned." enabled\="true" name\="Custom\: (Static SQLJ) You supply the SQL, returns a result set">\# DDL Template\r\nCREATE PROCEDURE ${name} ()\r\n    DYNAMIC RESULT SETS 1\r\n    LANGUAGE Java\r\n    EXTERNAL NAME '${javaPackage}.${className}.x${routineName}'\r\n    PARAMETER STYLE JAVA\r\n\# Java Template SQLJ\r\npackage ${javaPackage};\r\n\r\nimport java.sql.*;\r\nimport sqlj.runtime.*;\r\nimport sqlj.runtime.ref.*;\r\n\r\n\#sql context SPContext;\r\n\#sql iterator ${routineName}_Cursor1 ( );\r\n\r\npublic class ${className} {\r\n    public static void x${routineName}(ResultSet[] rs) throws SQLException,\r\n            Exception {\r\n        ${routineName}_Cursor1 cursor1 \= null;\r\n        SPContext ctx \= null;\r\n        try {\r\n            ctx \= new SPContext("jdbc\:default\:connection", false);\r\n\r\n            // \#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\r\n\t        // \# Replace the SQL statement with your statement.\r\n\t        // \#  Note\: Be sure enclose the SQL statement in braces.\r\n\t        // \#\r\n\t        // \# The example SQL statement SELECT ALIAS FROM SYS.SYSALIASES\r\n            // \# returns all aliases from SYS.SYSALIASES\r\n            // \#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\r\n            \#sql [ctx] cursor1 \= { SELECT ALIAS FROM SYS.SYSALIASES };\r\n            \r\n            rs[0] \= cursor1.getResultSet();\r\n        } catch (SQLException e) {\r\n            // Close open resources\r\n            try {\r\n                if (cursor1 \!\= null)\r\n                    cursor1.close();\r\n                if (ctx \!\= null)\r\n                    ctx.close();\r\n            } catch (SQLException e2) {\r\n            }\r\n            throw e;\r\n        }\r\n    }\r\n}</template></templates>
eclipse.preferences.version=1
