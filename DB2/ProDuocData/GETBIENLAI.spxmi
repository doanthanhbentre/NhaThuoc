<?xml version="1.0" encoding="UTF-8"?>
<xmi:XMI xmi:version="2.0"
    xmlns:xmi="http://www.omg.org/XMI"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xmlns:DB2Model="http:///com/ibm/db/models/db2/db2.ecore"
    xmlns:SQLDataTypes="http:///org/eclipse/datatools/modelbase/sql/datatypes.ecore">
  <DB2Model:DB2Procedure
      name="GETBIENLAI"
      specificName="SQL150309155645526"
      language="SQL"
      sqlDataAccess="MODIFIES_SQL_DATA"
      lastAlteredTS="2015-03-09 15:56:45.546"
      security="SECURITY DB2"
      schema="/1"
      maxResultSets="1">
    <eAnnotations
        source="validLines">
      <details key="validLines"
          value=""/>
    </eAnnotations>
    <eAnnotations
        source="debugrole">
      <details key="debugrole"
          value="false"/>
    </eAnnotations>
    <parameters name="MAPX">
      <containedType
          xsi:type="SQLDataTypes:CharacterStringDataType"
          name="CHAR"
          length="10"/>
    </parameters>
    <source xsi:type="DB2Model:DB2Source">
      <clearBody><![CDATA[CREATE PROCEDURE DUOC.GETBIENLAI 
(
IN MAPX CHAR(10)
)
	DYNAMIC RESULT SETS 1
P1: BEGIN
	-- Declare cursor
	DECLARE cursor1 CURSOR WITH RETURN for
	-- #######################################################################
	-- # Replace the SQL statement with your statement.
	-- #  Note: Be sure to end statements with the terminator character (usually ';')
	-- #
	-- # The example SQL statement SELECT NAME FROM SYSIBM.SYSTABLES
	-- # returns all names from SYSIBM.SYSTABLES.
	-- ######################################################################
	SELECT KH.MAKH,
	KH.TENKH,
	KH.NAMSINH,
	CASE WHEN KH.GIOITINH = 0 THEN 'Nam' ELSE 'Nữ' END As GIOITINH,
	KH.DIACHI,
	PX.MAPX,
	PX.CHANDOAN,
	BS.HOTEN AS BACSI,
	KP.TENKP,
	SP.TENSP,
	DV.TENDONVI,
	CT.SOLUONG,
	CT.CACHDUNG,
	CT.GIAXUAT,
	CT.SOLUONG * CT.GIAXUAT AS THANHTIEN,
	ND.HOTEN AS NGUOIDUNG
FROM DUOC.PHIEUXUAT PX JOIN DUOC.CHITIETXUAT CT ON PX.MAPX = CT.MAPX
	JOIN DUOC.KHACHHANG KH ON PX.MAKH = KH.MAKH
	JOIN DUOC.BACSI BS ON PX.MABS = BS.MABS 
	JOIN DUOC.KHOAPHONG KP ON PX.MAKP = KP.MAKP
	JOIN DUOC.SANPHAMSD SD ON CT.MASPSD = SD.MASPSD
	JOIN DUOC.SANPHAM SP ON SD.MASP = SP.MASP
	JOIN DUOC.DONVI DV ON SP.DONVIID = DV.DONVIID
	JOIN DUOC.NGUOIDUNG ND ON PX.TENDANGNHAP = ND.TENDANGNHAP
WHERE PX.MAPX = GETBIENLAI.MAPX;

	-- Cursor left open for client application
	OPEN cursor1;
END P1]]></clearBody>
    </source>
    <extendedOptions
        built="true"/>
  </DB2Model:DB2Procedure>
  <DB2Model:DB2Schema
      name="DUOC"
      routines="/2 /0"/>
  <DB2Model:DB2Procedure
      name="GETBIENLAI"
      specificName="SQL150309155645526"
      language="SQL"
      sqlDataAccess="MODIFIES_SQL_DATA"
      lastAlteredTS="2015-03-09 15:56:45.546"
      security="SECURITY DB2"
      schema="/1"
      maxResultSets="1"
      origParmSig="CHAR(10)">
    <eAnnotations
        source="validLines">
      <details key="validLines"
          value=""/>
      <details key="dbversion"
          value="DB2 UDB 10.5.0"/>
    </eAnnotations>
    <eAnnotations
        source="debugrole">
      <details key="debugrole"
          value="false"/>
    </eAnnotations>
    <parameters name="MAPX">
      <containedType
          xsi:type="SQLDataTypes:CharacterStringDataType"
          name="CHAR"
          length="10"/>
    </parameters>
    <source xsi:type="DB2Model:DB2Source">
      <clearBody><![CDATA[CREATE PROCEDURE DUOC.GETBIENLAI 
(
IN MAPX CHAR(10)
)
	DYNAMIC RESULT SETS 1
P1: BEGIN
	-- Declare cursor
	DECLARE cursor1 CURSOR WITH RETURN for
	-- #######################################################################
	-- # Replace the SQL statement with your statement.
	-- #  Note: Be sure to end statements with the terminator character (usually ';')
	-- #
	-- # The example SQL statement SELECT NAME FROM SYSIBM.SYSTABLES
	-- # returns all names from SYSIBM.SYSTABLES.
	-- ######################################################################
	SELECT KH.MAKH,
	KH.TENKH,
	KH.NAMSINH,
	CASE WHEN KH.GIOITINH = 0 THEN 'Nam' ELSE 'Nữ' END As GIOITINH,
	KH.DIACHI,
	PX.MAPX,
	PX.CHANDOAN,
	BS.HOTEN AS BACSI,
	KP.TENKP,
	SP.TENSP,
	DV.TENDONVI,
	CT.SOLUONG,
	CT.CACHDUNG,
	CT.GIAXUAT,
	CT.SOLUONG * CT.GIAXUAT AS THANHTIEN,
	ND.HOTEN AS NGUOIDUNG
FROM DUOC.PHIEUXUAT PX JOIN DUOC.CHITIETXUAT CT ON PX.MAPX = CT.MAPX
	JOIN DUOC.KHACHHANG KH ON PX.MAKH = KH.MAKH
	JOIN DUOC.BACSI BS ON PX.MABS = BS.MABS 
	JOIN DUOC.KHOAPHONG KP ON PX.MAKP = KP.MAKP
	JOIN DUOC.SANPHAMSD SD ON CT.MASPSD = SD.MASPSD
	JOIN DUOC.SANPHAM SP ON SD.MASP = SP.MASP
	JOIN DUOC.DONVI DV ON SP.DONVIID = DV.DONVIID
	JOIN DUOC.NGUOIDUNG ND ON PX.TENDANGNHAP = ND.TENDANGNHAP
WHERE PX.MAPX = GETBIENLAI.MAPX;

	-- Cursor left open for client application
	OPEN cursor1;
END P1]]></clearBody>
    </source>
    <extendedOptions
        built="true"/>
  </DB2Model:DB2Procedure>
</xmi:XMI>
